import os
import sys

import pygame
import requests

def resp(lon, lat, z, type, m=''):

    api_server = "http://static-maps.yandex.ru/1.x/"

    params = {
        "ll": ",".join([lon, lat]),
        "z": z,
        "l": type
    }
    if m != '':
        params['pt'] = str(m[0]) + ',' + str(m[1])
    response = requests.get(api_server, params=params)
    if not response:
        print("Ошибка выполнения запроса:")
        print(map_request)
        print("Http статус:", response.status_code, "(", response.reason, ")")
        sys.exit(1)

    # Запишем полученное изображение в файл.
    map_file = "map.png"
    with open(map_file, "wb") as file:
        file.write(response.content)
    return map_file

def g_resp(s):
    geocoder_request = "http://geocode-maps.yandex.ru/1.x/?apikey=40d1649f-0493-4b70-98ba-98533de7710b&geocode=" + s + "&format=json"

    # Выполняем запрос.
    response = requests.get(geocoder_request)
    if response:
        # Преобразуем ответ в json-объект
        json_response = response.json()

        # Получаем первый топоним из ответа геокодера.
        # Согласно описанию ответа, он находится по следующему пути:
        toponym = json_response["response"]["GeoObjectCollection"]["featureMember"][0]["GeoObject"]
        # Полный адрес топонима:
        toponym_address = toponym["metaDataProperty"]["GeocoderMetaData"]["text"]
        # Координаты центра топонима:
        toponym_coodrinates = toponym["Point"]["pos"]
        # Печатаем извлечённые из ответа поля:
        return toponym_address, toponym_coodrinates
    else:
        print("Ошибка выполнения запроса:")
        print(geocoder_request)
        print("Http статус:", response.status_code, "(", response.reason, ")")

lon = "46"
lat = "51.5"
z = "10"
type = 'sat,skl'

pygame.init()
pygame.display.set_caption('Maps-API')
size = width, height = 750, 550
screen = pygame.display.set_mode(size)

map_file = resp(lon, lat, z, type)
running = True
fps = 60
s = ''
s_a = 0
m = ''
e = ''
adr = ''
clock = pygame.time.Clock()
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            if 610 < event.pos[0] < 690:
                if 300 < event.pos[1] < 330:
                    type = 'map'
                    map_file = resp(lon, lat, z, type, m)
                if 350<event.pos[1]<380:
                    type = 'sat'
                    map_file = resp(lon, lat, z, type, m)
                if 400<event.pos[1]<430:
                    type = 'sat,skl'
                    map_file = resp(lon, lat, z, type, m)
            if 10 < event.pos[0] < 490 and 10 < event.pos[1] < 40:
                s_a = 1 - s_a
            if 610 < event.pos[0] < 710 and 10 < event.pos[1] < 55:
                m = ''
                map_file = resp(lon, lat, z, type, m)
                e = ''
                adr = ''
            if 500 < event.pos[0] < 590 and 10 < event.pos[1] < 40:
                e = ''
                adr = ''
                try:
                    r = g_resp(s)
                    adr = r[0]
                    r = r[1].split()
                    lon = r[0]
                    lat = r[1]
                    m = (lon, lat)
                    map_file = resp(lon, lat, z, type, m)
                except Exception:
                    e = 'Ничего не найдено'
        if event.type == pygame.KEYDOWN:
            #То, что не отслеживаются предельные значения координат - не ошибка. Эту подзадачу всё ещё делает Маргарита,
            # я сделал хотя-бы что-то, чтобы протестировать работоспособность некоторых функций
            if event.key == pygame.K_UP:
                lat = str(float(lat)+10**2/2**int(z))
            if event.key == pygame.K_DOWN:
                lat = str(float(lat)-10**2/2**int(z))
            if event.key == pygame.K_RIGHT:
                lon = str(float(lon)+10**2/2**int(z))
            if event.key == pygame.K_LEFT:
                lon = str(float(lon)-10**2/2**int(z))

            map_file = resp(lon, lat, z, type, m)
            if event.key == pygame.K_PAGEUP:
                if z != "19":
                    z = str(int(z) + 1)
                    os.remove(map_file)
                    map_file = resp(lon, lat, z, type, m)
            if event.key == pygame.K_PAGEDOWN:
                if z != "2":
                    z = str(int(z) - 1)
                    os.remove(map_file)
                    map_file = resp(lon, lat, z, type, m)
            if event.key == pygame.K_RETURN:
                e = ''
                adr = ''
                try:
                    r = g_resp(s)
                    adr = r[0]
                    r = r[1].split()
                    lon = r[0]
                    lat = r[1]
                    m = (lon, lat)
                    map_file = resp(lon, lat, z, type, m)
                except Exception:
                    e = 'Ничего не найдено'
            elif event.key == pygame.K_BACKSPACE:
                if len(s) > 0:
                    s = s[:-1]
            elif event.unicode != '' and s_a != 0:
                s += event.unicode



    screen.fill((0, 0, 150))
    screen.blit(pygame.image.load(map_file), (0, 80))
    pygame.draw.rect(screen, (255, 255, 255), (610, 300, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (610, 350, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (610, 400, 80, 30))
    pygame.draw.rect(screen, (255, 255, 255), (10, 10, 480, 30))
    pygame.draw.rect(screen, (255, 255, 255), (10, 45, 580, 25))
    pygame.draw.rect(screen, (255, 255, 255), (500, 10, 90, 30))
    pygame.draw.rect(screen, (255, 255, 255), (610, 10, 100, 55))
    if s_a == 1:
        font = pygame.font.Font(None, 35)
        text = font.render(s+'_', 1, (0, 0, 0))
        screen.blit(text, (12, 14))
    else:
        font = pygame.font.Font(None, 35)
        text = font.render(s, 1, (0, 0, 0))
        screen.blit(text, (12, 14))

    if adr != '':
        font = pygame.font.Font(None, 25)
        text = font.render('Полный адрес: '+adr, 1, (0, 0, 0))
        screen.blit(text, (20, 47))


    font = pygame.font.Font(None, 35)
    text = font.render('Поиск', 1, (255, 0, 0))
    screen.blit(text, (510, 14))

    font = pygame.font.Font(None, 25)
    text = font.render('Сброс', 1, (255, 0, 0))
    screen.blit(text, (610, 14))
    font = pygame.font.Font(None,25)
    text = font.render('поискового', 1, (255, 0, 0))
    screen.blit(text, (610, 29))
    font = pygame.font.Font(None, 25)
    text = font.render('результата', 1, (255, 0, 0))
    screen.blit(text, (610, 44))

    font = pygame.font.Font(None, 30)
    text = font.render(e, 1, (0, 0, 0))
    screen.blit(text, (20, 47))

    font = pygame.font.Font(None, 35)
    text = font.render('схема', 1, (255, 0, 0))
    screen.blit(text, (615, 304))
    font = pygame.font.Font(None, 27)
    text = font.render('спутник', 1, (255, 0, 0))
    screen.blit(text, (615, 354))
    font = pygame.font.Font(None, 30)
    text = font.render('гибрид', 1, (255, 0, 0))
    screen.blit(text, (615, 404))
    pygame.display.flip()

    clock.tick(fps)
pygame.quit()

os.remove(map_file)
